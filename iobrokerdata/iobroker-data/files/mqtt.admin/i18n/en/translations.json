{
  "Adapter settings": "MQTT instance settings",
  "Always clean sessions for all clients": "Always clean sessions for all clients",
  "Always keep sessions for all clients": "Always keep sessions for all clients",
  "Authentication settings": "Authentication settings",
  "Chained certificate:": "Chained certificate",
  "Client": "Client/subscriber",
  "Client ID:": "Client ID",
  "Connection": "Connection",
  "Connection settings": "Connection settings",
  "Enable first the adapter to test client.": "The instance needs to be enabled to be able to test the client.",
  "First save the adapter": "The instance settings need to be saved first.",
  "Force clean session": "Force clean session",
  "IP address": "IP address",
  "Interval before send topics by connection:": "Delay before sending topics to clients after connect",
  "MQTT Settings": "MQTT Settings",
  "MQTT adapter settings": "MQTT instance settings",
  "Main settings": "General settings",
  "Mask to publish own state": "Mask to publish own states",
  "Max topic length:": "Maximum topic name length",
  "Password confirmation:": "Password confirmation",
  "Password:": "Password",
  "Patterns:": "Subscribe patterns",
  "Persistent Session": "Persistent Session",
  "Port:": "Port",
  "Prefix for topics:": "Prefix for all topics",
  "Private certificate:": "Private certificate",
  "Public certificate:": "Public certificate",
  "Publish all states at start:": "Publish own states on connect",
  "Publish states on subscribe:": "Publish states on subscribe",
  "Result: ": "Result: ",
  "Secure:": "SSL",
  "Send interval:": "Send delay",
  "Send states (ack=true) too:": "Send states (ack=true) too",
  "Server": "Server/Broker",
  "Set certificates or load it first in the system settings (right top).": "Set certificates or define it first in the system settings (right top).",
  "Store only on change:": "Publish only on change",
  "Test connection": "Test connection with Server",
  "Trace output for every message:": "Trace output for every message",
  "Type:": "Type",
  "URL:": "URL",
  "Use WebSockets:": "Use WebSockets",
  "Use chunk patch:": "Use chunk patch",
  "Use client settings": "Use client settings",
  "Use different topic names for set and get:": "Use different topic names for set and get",
  "User:": "User",
  "chars": "chars",
  "connected": "connected",
  "ms": "ms",
  "IP": "IP",
  "rejectUnauthorized": "Reject unauthorized servers",
  "Set retain flag": "Set retain flag",
  "Default QoS:": "Default QoS:",
  "0 - At most once": "0 - At most once",
  "1 - At least once": "1 - At least once",
  "2 - Exactly once": "2 - Exactly once",
  "Send state object as mqtt message": "Send state object as mqtt message",
  "Remove prefix from topics": "Remove prefix from topics",
  "Like \"javascript.0.\" to remove it from all topics": "Like \"javascript.0.\" to remove it from all topics",
  "Do not create new states": "Do not create new states",
  "Publish messages without \"retain\" flag": "Publish messages without \"retain\" flag",
  "All new topics will be processed as binary": "All new topics will be processed as binary",
  "These states will be published. (Divided by comma)": "These states will be published. (Divided by comma, e.g. 'mqtt.0.*,javascript.*')",
  "Subscribe for topics. (Divided by comma, e.g. 'mqtt/0/#,javascript/#')": "Subscribe for topics. (Divided by comma, e.g. 'mqtt/0/#,javascript/#')"
}